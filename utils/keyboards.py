from telebot import types
import information_data


def create_files_keyboard(files, subject, type, page=0):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    keyboard = types.InlineKeyboardMarkup()

    # –í—ã—á–∏—Å–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = page * information_data.FILES_PER_PAGE
    end_idx = start_idx + information_data.FILES_PER_PAGE
    page_files = files[start_idx:end_idx]

    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    for i, file in enumerate(page_files):
        global_index = start_idx + i
        keyboard.add(types.InlineKeyboardButton(
            text=f"üìÑ {file}",
            callback_data=f"oth_f_{subject}_{type}_{global_index}"
        ))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    row_buttons = []

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    if page > 0:
        row_buttons.append(types.InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data=f"page_{subject}_{type}_{page - 1}"
        ))

    # –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª" –≤—Å–µ–≥–¥–∞ –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ
    row_buttons.append(types.InlineKeyboardButton(
        text=information_data.add_file_text,
        callback_data=f"add_{subject}_{type}"
    ))

    # –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ" –µ—Å–ª–∏ –µ—Å—Ç—å –µ—â–µ —Ñ–∞–π–ª—ã
    if end_idx < len(files):
        row_buttons.append(types.InlineKeyboardButton(
            text="–î–∞–ª–µ–µ ‚ñ∂Ô∏è",
            callback_data=f"page_{subject}_{type}_{page + 1}"
        ))

    keyboard.row(*row_buttons)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ —Ç–∏–ø–∞–º —Ñ–∞–π–ª–æ–≤"
    keyboard.add(types.InlineKeyboardButton(
        text=information_data.back_text,
        callback_data=f"oth_subj_{subject}"
    ))

    return keyboard


def create_homework_files_keyboard(files, subject, page=0):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ñ–∞–π–ª–æ–≤ –¥–æ–º–∞—à–Ω–∏—Ö —Ä–∞–±–æ—Ç —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    keyboard = types.InlineKeyboardMarkup()

    # –í—ã—á–∏—Å–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = page * information_data.HOMEWORK_FILES_PER_PAGE
    end_idx = start_idx + information_data.HOMEWORK_FILES_PER_PAGE
    page_files = files[start_idx:end_idx]

    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    for file in page_files:
        keyboard.add(types.InlineKeyboardButton(
            text=f"üìÑ {file}",
            callback_data=f"file_{subject}_{file}"
        ))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    row_buttons = []

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    if page > 0:
        row_buttons.append(types.InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data=f"hwpage_{subject}_{page - 1}"
        ))

    # –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ" –µ—Å–ª–∏ –µ—Å—Ç—å –µ—â–µ —Ñ–∞–π–ª—ã
    if end_idx < len(files):
        row_buttons.append(types.InlineKeyboardButton(
            text="–î–∞–ª–µ–µ ‚ñ∂Ô∏è",
            callback_data=f"hwpage_{subject}_{page + 1}"
        ))

    if row_buttons:  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏
        keyboard.row(*row_buttons)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ –ø—Ä–µ–¥–º–µ—Ç–∞–º"
    keyboard.add(types.InlineKeyboardButton(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–µ–¥–º–µ—Ç–∞–º",
        callback_data="back_to_subjects"
    ))

    return keyboard


def get_page_text(files, subject_name, type_name, page, total_pages):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    start_idx = page * information_data.FILES_PER_PAGE
    end_idx = min(start_idx + information_data.FILES_PER_PAGE, len(files))

    text = f"üìÇ *{subject_name} - {type_name}*\n\n"

    if not files:
        text += "‚ùå –§–∞–π–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n\nüì§ –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª!"
    else:
        text += f"–§–∞–π–ª—ã {start_idx + 1}-{end_idx} –∏–∑ {len(files)}\n"
        if total_pages > 1:
            text += f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1} –∏–∑ {total_pages}\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª:"
        else:
            text += "\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª:"

    return text


def get_homework_page_text(files, subject_name, page, total_pages):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–º–∞—à–Ω–∏—Ö —Ä–∞–±–æ—Ç"""
    start_idx = page * information_data.HOMEWORK_FILES_PER_PAGE
    end_idx = min(start_idx + information_data.HOMEWORK_FILES_PER_PAGE, len(files))

    text = f"üìÇ *{subject_name}*\n\n"

    if not files:
        text += "‚ùå –§–∞–π–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    else:
        text += f"–§–∞–π–ª—ã {start_idx + 1}-{end_idx} –∏–∑ {len(files)}\n"
        if total_pages > 1:
            text += f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1} –∏–∑ {total_pages}\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª:"
        else:
            text += "\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª:"

    return text
