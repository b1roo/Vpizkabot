import urllib
from telebot import types
import information_data
import os
from utils.keyboards import create_homework_files_keyboard, get_homework_page_text

def setup_homework_handlers(bot):

    homework_pagination_cache = {}

    @bot.message_handler(commands=['hwfiles'])
    def hw_mes(message):

        keyboard = types.InlineKeyboardMarkup()  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ –ø—Ä–µ–¥–º–µ—Ç–æ–≤

        for subject_key, subject_name in information_data.subjects_homework.items():
            # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ –ø—Ä–µ–¥–º–µ—Ç–∞
            subject_path = os.path.join(information_data.file_path_homework, subject_key)
            file_count = 0
            if os.path.exists(subject_path):
                file_count = len([f for f in os.listdir(subject_path) if os.path.isfile(os.path.join(subject_path, f))])

            keyboard.add(types.InlineKeyboardButton(
                text=f"{subject_name} ({file_count} —Ñ–∞–π–ª–æ–≤)",
                callback_data=f"subject_{subject_key}"
            ))
        bot.send_message(message.chat.id, information_data.homework_files_text, reply_markup=keyboard)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è –¥–∑
    @bot.callback_query_handler(func=lambda call: call.data.startswith('subject_'))
    def show_files(call):
        subject = call.data.split('_')[1]
        subject_path = os.path.join(information_data.file_path_homework, subject)

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        files = []
        if os.path.exists(subject_path):
            files = [f for f in os.listdir(subject_path) if os.path.isfile(os.path.join(subject_path, f))]

        if not files:
            bot.send_message(
                chat_id=call.message.chat.id,
                text=f"üìÇ –í –ø–∞–ø–∫–µ '{information_data.subjects_homework[subject]}' –ø–æ–∫–∞ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤"
            )
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã –≤ –∫—ç—à –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        homework_pagination_cache[subject] = files
        page = 0  # –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã

        # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
        total_pages = (
                                  len(files) + information_data.HOMEWORK_FILES_PER_PAGE - 1) // information_data.HOMEWORK_FILES_PER_PAGE

        keyboard = create_homework_files_keyboard(files, subject, page)
        text = get_homework_page_text(files, information_data.subjects_homework[subject], page, total_pages)

        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=text,
            parse_mode='Markdown',
            reply_markup=keyboard
        )

    @bot.callback_query_handler(func=lambda call: call.data.startswith('hwpage_'))
    def handle_homework_page_navigation(call):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –¥–æ–º–∞—à–Ω–∏—Ö —Ä–∞–±–æ—Ç"""
        data = call.data.split('_')
        subject = data[1]
        page = int(data[2])

        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ –∫—ç—à–∞
        if subject not in homework_pagination_cache:
            bot.answer_callback_query(call.id, "‚ùå –î–∞–Ω–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–ª–∏")
            return

        files = homework_pagination_cache[subject]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        total_pages = (
                                  len(files) + information_data.HOMEWORK_FILES_PER_PAGE - 1) // information_data.HOMEWORK_FILES_PER_PAGE
        if page < 0 or page >= total_pages:
            bot.answer_callback_query(call.id, "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
            return

        keyboard = create_homework_files_keyboard(files, subject, page)
        text = get_homework_page_text(files, information_data.subjects_homework[subject], page, total_pages)

        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=text,
            parse_mode='Markdown',
            reply_markup=keyboard
        )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞
    @bot.callback_query_handler(func=lambda call: call.data.startswith('file_'))
    def send_file(call):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª"""
        data = call.data.split('_')
        subject = data[1]
        encoded_filename = '_'.join(data[2:])  # –ù–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ –µ—Å—Ç—å _
        filename = urllib.parse.unquote(encoded_filename)

        file_path = os.path.join(information_data.file_path_homework, subject, filename)

        try:
            with open(file_path, 'rb') as file:
                bot.send_document(call.message.chat.id, file)
            bot.answer_callback_query(call.id, "–§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω üìÑ")
        except:
            bot.answer_callback_query(call.id, "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")

    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –∫ –ø—Ä–µ–¥–º–µ—Ç–∞–º
    @bot.callback_query_handler(func=lambda call: call.data == 'back_to_subjects')
    def back_to_subjects(call):
        """–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –ø—Ä–µ–¥–º–µ—Ç–æ–≤"""
        hw_mes(call.message)
