from telebot import types
import information_data
import os
from shared_data import file_cache
from shared_data import file_uploads
from shared_data import user_states


class UserState:
    WAITING_FILE = "waiting_file"
    WAITING_FILENAME = "waiting_filename"


def setup_upload_handlers(bot):


    @bot.callback_query_handler(func=lambda call: call.data.startswith('add_'))
    def add_file_handler(call):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞"""
        data = call.data.split('_')
        subject = data[1]
        type = data[2]

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫—É–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        user_id = call.from_user.id
        file_uploads[user_id] = {
            'subject': subject,
            'type': type,
            'state': UserState.WAITING_FILE
        }

        # –ü—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª
        bot.send_message(
            call.message.chat.id,
            f"üì§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ "
            f"{information_data.subjects_others[subject]} - "
            f"{information_data.file_types_others[type]}\n\n"
            f"‚ö†Ô∏è –§–∞–π–ª –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º",
            reply_markup=types.ForceReply(selective=True)
        )

    # –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    @bot.message_handler(content_types=['document'])
    def handle_document(message):
        user_id = message.from_user.id

        if user_id not in file_uploads:
            bot.send_message(message.chat.id, "‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ '–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª' –≤ –º–µ–Ω—é")
            return

        upload_info = file_uploads[user_id]
        subject = upload_info['subject']
        type = upload_info['type']

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –æ—Ç–¥–µ–ª—å–Ω–æ
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        target_dir = os.path.join(information_data.file_path_others, subject, type)
        os.makedirs(target_dir, exist_ok=True)

        filename = message.document.file_name
        file_path = os.path.join(target_dir, filename)

        with open(file_path, 'wb') as new_file:
            new_file.write(downloaded_file)

        # –ù–µ –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ä–∞–∑—É - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ —Ñ–∞–π–ª—ã
        bot.send_message(
            message.chat.id,
            f"‚úÖ –§–∞–π–ª '{filename}' –¥–æ–±–∞–≤–ª–µ–Ω. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â–µ —Ñ–∞–π–ª—ã –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /done –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    @bot.message_handler(commands=['done'])
    def finish_upload(message):
        user_id = message.from_user.id
        if user_id in file_uploads:
            upload_info = file_uploads[user_id]
            subject = upload_info['subject']
            type = upload_info['type']

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
            show_updated_files(message.chat.id, subject, type)
            del file_uploads[user_id]
            bot.send_message(message.chat.id, "‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ—á–µ–≥–æ –∑–∞–≤–µ—Ä—à–∞—Ç—å")

    def show_updated_files(chat_id, subject, type, reply_to_message_id=None):
        """–ü–æ–∫–∞–∑–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤"""
        subject_name = information_data.subjects_others[subject]
        type_name = information_data.file_types_others[type]
        subject_type_path = os.path.join(information_data.file_path_others, subject, type)

        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        files = []
        if os.path.exists(subject_type_path):
            files = [f for f in os.listdir(subject_type_path) if os.path.isfile(os.path.join(subject_type_path, f))]

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
        cache_key = f"{subject}_{type}"
        file_cache[cache_key] = files

        keyboard = types.InlineKeyboardMarkup()

        for i, file in enumerate(files):
            keyboard.add(types.InlineKeyboardButton(
                text=f"üìÑ {file}",
                callback_data=f"oth_f_{subject}_{type}_{i}"
            ))

        keyboard.add(types.InlineKeyboardButton(
            text=information_data.add_file_text,
            callback_data=f"add_{subject}_{type}"
        ))

        keyboard.add(types.InlineKeyboardButton(
            text=information_data.back_text,
            callback_data=f"oth_subj_{subject}"
        ))

        bot.send_message(
            chat_id,
            f"üìÇ *{subject_name} - {type_name}*\n\n–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤:",
            parse_mode='Markdown',
            reply_markup=keyboard,
            reply_to_message_id=reply_to_message_id
        )

    @bot.message_handler(commands=['cancel'])
    def cancel_upload(message):
        """–û—Ç–º–µ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞"""
        user_id = message.from_user.id
        if user_id in file_uploads:
            del file_uploads[user_id]
            bot.send_message(message.chat.id, "‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        else:
            bot.send_message(message.chat.id, "‚ùå –ù–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å")
